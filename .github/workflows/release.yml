name: Build and upload files to created release

on:
  release:
    types: [created]

env:
  EXILED_REFERENCES_URL: https://misaka-zerotwo.github.io/SL-References/Dev.zip
  EXILED_REFERENCES: ${{ github.workspace }}/refs
  HSM_URL: https://api.github.com/repos/MeowServer/HintServiceMeow/releases

permissions: 
  contents: write

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1.3
        with:
          vs-prerelease: false
          msbuild-architecture: x64
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Exiled References
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri ${{ env.EXILED_REFERENCES_URL }} -OutFile ${{ github.workspace }}/References.zip
          Expand-Archive -Path References.zip -DestinationPath ${{ env.EXILED_REFERENCES }} -Force
      - name: Restore packages
        run: nuget restore ${{ github.workspace }}/Timers.sln
      - name: Build RueI
        run: msbuild.exe ${{ github.workspace }}/Timers.sln /p:Configuration=RUEI /p:Platform=RUEI
      - name: Get HSM Resources
        shell: pwsh
        run: |
          $response = Invoke-RestMethod -Uri ${{ env.HSM_URL }}
          $asset = $response.assets | Where-Object { $_.name -eq 'HintServiceMeow-Exiled.dll' } | Select-Object -First 1
          $url = $asset.browser_download_url
          Invoke-WebRequest -Uri $url -OutFile ${{ env.EXILED_REFERENCES }}/HintServiceMeow-Exiled.dll
      - name: Build HSM
        run: msbuild.exe ${{ github.workspace }}/Timers.sln /p:Configuration=HSM /p:Platform=HSM
      - name: Rename Timers.dll to Timers-RueI.dll
        run: Rename-Item -Path ${{ github.workspace }}/bin/RUEI/Timers.dll -NewName Timers-RueI.dll
      - name: Rename Timers.dll to Timers-HSM.dll
        run: Rename-Item -Path ${{ github.workspace }}/bin/HSM/Timers.dll -NewName Timers-HSM.dll
      - name: Move files to single directory
        run: |
          $outputDir = "${{ github.workspace }}/output"
          if (-Not (Test-Path $outputDir)) {
            New-Item -ItemType Directory -Path $outputDir
          }
          Move-Item -Path ${{ github.workspace }}/bin/RUEI/Timers-RueI.dll -Destination $outputDir
          Move-Item -Path ${{ github.workspace }}/bin/HSM/Timers-HSM.dll -Destination $outputDir
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Timers
          path: ${{ github.workspace }}/output
          if-no-files-found: error
  add-to-release:
    runs-on: windows-2019
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Timers
      - name: Add to release
        run: |
          cd ${{ github.workspace }}
          gh release upload ${{ github.event.release.tag_name }} output/Timers-RueI.dll output/Timers-HSM.dll
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        shell: bash